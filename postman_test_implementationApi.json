{
	"id": "a5884482-efd5-a33c-6e83-ed884a4700d2",
	"name": "InnSupport : ImplementationAPI copy copy",
	"description": "API Test need for IS-75\nv1 had Neils Version\nV2: Alejandro's version\nV3: IS-143 Neils Updates\nV4: IS-143 Alejandro's Update",
	"order": [],
	"folders": [
		{
			"owner": "387807",
			"lastUpdatedBy": "387807",
			"lastRevision": 279632081,
			"id": "369adbb1-2158-da8e-9344-82f8e6fbe567",
			"name": "1) Case Endpoint",
			"description": "Tests related to the creation and reading of case endpoints specfically:\n/case\n/case/{caseId}",
			"order": [
				"546499b5-91db-d78a-bd5d-2f5ed17059c5",
				"7f865c82-c19b-4588-d345-c708f0ad5feb",
				"03951e7c-bf46-6832-f59b-110e43607864",
				"6168ee85-410f-0066-cd40-645df57377fe",
				"4150ea0f-9d42-48a1-b4ec-af16a1ba3499",
				"81cdaf20-caf0-e048-ab28-cba86d1bfd56",
				"00dd3b06-45a7-32a0-ae32-394b4833d805",
				"cfbe225e-1802-3ee2-5c6c-b26e61e1bab3",
				"e61ef13b-c142-91bb-81a0-90befa958499",
				"341700e0-9c79-abd2-eec4-43b47f37d8f9",
				"2bcbbe9b-dfaf-2717-3d60-09cf1dd3f462",
				"186a5ab0-26a3-7956-95f0-8ff3de083092"
			]
		},
		{
			"owner": "387807",
			"lastUpdatedBy": "387807",
			"lastRevision": 279632082,
			"id": "b8d9677e-5e41-44e9-949d-344c6c6bccd8",
			"name": "2) Attachment Endpoints",
			"description": "Tests related to the creation and reading of case endpoints specfically:\n/case/{caseId}/attachment",
			"order": [
				"7762a2e4-4aaa-ed81-5951-f8988e3ccf23",
				"05b85646-4de4-e041-2b09-ab0d915629df",
				"1a7a5522-02c7-6be3-dae3-75c75b98ca3f",
				"0874d4f7-d856-420f-6d96-1a81dd774a68",
				"df4463d5-ee31-fd60-5aae-4138cfb12e9a"
			]
		},
		{
			"owner": "387807",
			"lastUpdatedBy": "387807",
			"lastRevision": 312877170,
			"id": "47f8d868-3762-db9c-75e0-bf7fa1c9e6d1",
			"name": "3) Credential Endpoints",
			"description": "",
			"order": [
				"6d68d38e-7da4-edea-183e-e7534d0024ab",
				"ea6a30d4-a6f5-207d-d304-4473bdfff5b3",
				"331397a1-6af0-95f9-cded-b895ce26e5ca",
				"d5ba8b4a-4f98-4757-484c-311d36514c9d",
				"9c4a1a7c-61c6-c3d0-65bc-37cdf234f975",
				"ff351692-e43f-65a5-167f-0c17f7b23563",
				"57b69f6d-9b82-668a-cfe3-659fac0a3044",
				"aeaeb808-9f40-7d1b-4ecf-c39bfe31d698"
			]
		}
	],
	"timestamp": 1466681224465,
	"owner": "387807",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "00dd3b06-45a7-32a0-ae32-394b4833d805",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "{{Case_URI}}/case?offset={{offset1}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Tc1:Response code 200\ntests[\"Test 1: List of cases, response code is 200\"] = responseCode.code === 200;\n\n//Validation for limit\nvar jsonData=JSON.parse(responseBody);\nvar arrayOfcase=jsonData.data;\ntests[\"Test 2: Default length is \"+arrayOfcase.length]=arrayOfcase.length<=25;\n\n//validation of schema\n\n//validation of schema\n\nvar schema =  {\n \t\"type\": \"object\",\n \t\"properties\": {\n \t\t\"meta\": {\n \t\t\t\"type\": \"object\",\n \t\t\t\"items\": {\n \t\t\t\t\"properties\": {\n \t\t\t\t\t\"total\": \"string\"\n \t\t\t\t}\n \t\t\t}\n \t\t},\n \t\t\"data\": {\n \t\t\t\"type\": \"array\",\n \t\t\t\"items\": {\n \t\t\t\t\"type\": \"object\",\n \t\t\t\t\"properties\": {\n \t\t\t\t\t\"id\": {\n \t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t},\n \t\t\t\t\t\"createdOn\": {\n \t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t},\n\n \t\t\t\t\t\"resolvedOn\": {\n \t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t},\n \t\t\t\t\t\"initiatedBy\": {\n \t\t\t      \"type\":[\"null\",\"object\"]\n \t\t\t\t\t\t},\n \t\t\t\t\t\"subject\": {\n \t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t},\n \t\t\t\t\t\"provider\": {\n \t\t\t\t\t\t\"type\": \"string\"\n\n \t\t\t\t\t},\n \t\t\t\t\t\"status\": {\n \t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t},\n\n \t\t\t\t\t\"client\": {\n \t\t\t\t\t\t\"type\": [\"null\",\"object\"],\n \t\t\t\t\t\t\"properties\": {\n \t\t\t\t\t\t\t\"id\": {\n \t\t\t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t\t\t},\n\n \t\t\t\t\t\t\t\"name\": {\n \t\t\t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t\t\t}\n\n \t\t\t\t\t\t}\n \t\t\t\t\t},\n \t\t\t\t\t\"properties\": {\n \t\t\t\t\t \"type\":[\"null\",\"array\"],\n \t\t\t\t\t\t\n \t\t\t\t\t\t\t\"items\": {\n \t\t\t\t\t\t\t\t\"type\": \"object\",\n \t\t\t\t\t\t\t\t\"properties\": {\n \t\t\t\t\t\t\t\t\t\"id\": {\n \t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t\t\t\t\t},\n \t\t\t\t\t\t\t\t\t\"name\": {\n \t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\n \t\t\t\t\t\t}\n \t\t\t\t\t\t},\n \t \t\t\t\t\t\"deskCaseId\": {\n\n \t\t\t\t\t\t\"type\": \"array\",\n \t\t\t\t\t\t\"items\": {\n \t\t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\t\n\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\t \n \t}\n \t};\n\nvar data = JSON.parse(responseBody);\nconsole.log(tv4.error);\ntests[\"Valid Data \"] = tv4.validate(data, schema);\n\n//Validation for offset value(First Request)\nvar jsonData=JSON.parse(responseBody);\nvar arrayOfcase=jsonData.data;\npostman.setEnvironmentVariable(\"case_offset_3_value\", arrayOfcase[3].id);\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1466174175066,
			"name": "Cases,  offset and default parameter",
			"description": "For list of cases check the\n- Default is correct\n- offset works as expected",
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "369adbb1-2158-da8e-9344-82f8e6fbe567"
		},
		{
			"id": "03951e7c-bf46-6832-f59b-110e43607864",
			"name": "Details for a specific case",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "",
			"headers": "Accept: application/json\n",
			"method": "GET",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/{{caseId}}",
			"preRequestScript": null,
			"tests": "// Confirm proper response code\r\ntests[\"Test 1: Get valid case details, response code = 200\"] = responseCode.code === 200;\r\n\r\n// Check the Schema //\r\nvar schema = \r\n{\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"id\": {\r\n        \"type\": \"string\"\r\n    },\r\n    \"status\": {\r\n          \"type\": \"string\"\r\n    },\r\n    \"createdOn\": {\r\n          \"type\": \"string\"\r\n    },\r\n    \"resolvedOn\": {\r\n          \"type\": \"string\"\r\n    },\r\n    //check deskcaseid test\r\n    // TODO: Defect based on initiatedBY Scheme Definition\r\n    \"deskCaseId\": {\r\n          \"type\": \"array\",\r\n          \"items\": [\r\n            {\r\n              \"type\": \"string\"\r\n            },\r\n          ]\r\n        },\r\n        \r\n    //check initiated by\r\n    // TODO: Defect based on initiatedBY Scheme Definition\r\n/*\r\n    \"initiatedBy\": {\r\n          \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n              \"type\": \"string\"\r\n        },\r\n        \"idp\": {\r\n              \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n              \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n*/    \r\n    \"subject\": {\r\n          \"type\": \"string\"\r\n    },\r\n    \"provider\": {\r\n          \"type\": \"string\"\r\n    },\r\n    \"client\": {\r\n          \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n              \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n              \"type\": \"string\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"required\": [\r\n    \"id\",\r\n    \"status\",\r\n    \"createdOn\",\r\n    \"resolvedOn\",\r\n    \"subject\",\r\n    \"provider\",\r\n    \"client\"\r\n  ]\r\n\r\n}\r\n\r\nvar data = JSON.parse(responseBody);\r\nvar result = tv4.validateResult(data, schema);\r\ntests[\"Test 2: schema test for single caseId\"] = result.valid;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "369adbb1-2158-da8e-9344-82f8e6fbe567"
		},
		{
			"id": "05b85646-4de4-e041-2b09-ab0d915629df",
			"name": "Get valid caseId for downstream attachment test",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"method": "GET",
			"pathVariables": {},
			"url": "{{Case_URI}}/case",
			"preRequestScript": null,
			"tests": "//get the first case id \nvar jsonData=JSON.parse(responseBody);\nvar arrayOfcase=jsonData.data;\n\nenvironment.caseid_value=arrayOfcase[0].id;\npostman.setEnvironmentVariable(\"caseid_value\", arrayOfcase[0].id);\ntests[\"Get the Case id \"+arrayOfcase[0].id + \" for future tests\"]=arrayOfcase[0].id==environment.caseid_value;\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "b8d9677e-5e41-44e9-949d-344c6c6bccd8"
		},
		{
			"id": "0874d4f7-d856-420f-6d96-1a81dd774a68",
			"name": "Create Attachment: Invalid input",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "",
			"headers": "Content-Type: application/json\nAccept: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/{{caseid_value}}/attachment",
			"preRequestScript": null,
			"tests": "tests[\"Test 1: For InValid data input, response code = 400\"] = responseCode.code === 400;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"rawModeData": "{\r\n  \"id\": abcd1234,\r\n  \"idp\": \"abcd12345\",\r\n  \"name\": \"test\",\r\n  \"size\": 1\r\n}",
			"folder": "b8d9677e-5e41-44e9-949d-344c6c6bccd8"
		},
		{
			"id": "186a5ab0-26a3-7956-95f0-8ff3de083092",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "{{Case_URI}}/{{Case_URI}}/case?/{{caseid}}=caseId=?{{caseId}}0&limit=25",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//sorting is done wrt Cretaed ON date which sets as -Cretaed on as Param\ntests[\"Test 1: Extra query paramter in URI, response code = 400\"] = responseCode.code === 400;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1466492745348,
			"name": "Cases, extra parameter test",
			"description": "",
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "369adbb1-2158-da8e-9344-82f8e6fbe567"
		},
		{
			"id": "1a7a5522-02c7-6be3-dae3-75c75b98ca3f",
			"name": "Create attachment",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "Creates an attachment resource for a valid case.",
			"headers": "Content-Type: application/json\nAccept: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/{{caseid_value}}/attachment",
			"preRequestScript": "",
			"tests": "tests[\"Test 1: Create of attahcment for a case, response code = 201\"] = responseCode.code === 201;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"rawModeData": "{\r\n  \"id\": \"{{$randomInt}}\",\r\n  \"idp\": \"{{idp}}\",\r\n  \"name\": \"{{name}}\",\r\n  \"size\": \"{{size}}\"\r\n}",
			"folder": "b8d9677e-5e41-44e9-949d-344c6c6bccd8"
		},
		{
			"id": "2bcbbe9b-dfaf-2717-3d60-09cf1dd3f462",
			"name": "Cases, Sort by subject DESC",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"method": "GET",
			"pathVariables": {},
			"url": "{{Case_URI}}/case?offset=0&limit=25&sort=-subject",
			"preRequestScript": null,
			"tests": "//where lists are sorted in albhabetical order \nvar jsonData=JSON.parse(responseBody);\nvar array=(jsonData.data);\n\nvar sorted  =  true;\n for  (var item=1;item<=array.length -1;item++) \n {\n       if(array[item-1].subject < array[item].subject)\n   {\n     sorted = false;\n     tests[\"Test 1:Test failed. Data not sorted at element number \" + item + \" data.\"] = sorted;\n   }\n}\nif (sorted)\n{\n    tests[\"Test 1: Data is sorted in Ascending order by subject(albhabetical order) , first subject data is \" +array[0].subject] = sorted;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "369adbb1-2158-da8e-9344-82f8e6fbe567"
		},
		{
			"id": "331397a1-6af0-95f9-cded-b895ce26e5ca",
			"name": "Get valid Case for downstream credential tests",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": "html",
			"description": "This is a request simply to get a valid case, then using it in future requests.",
			"headers": "Content-Type: application/json\nAccept: application/json\n",
			"method": "GET",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/",
			"preRequestScript": null,
			"tests": "//get the first case id \nvar jsonData=JSON.parse(responseBody);\nvar arrayOfcase=jsonData.data;\n\nenvironment.caseid_value=arrayOfcase[0].id;\npostman.setEnvironmentVariable(\"caseid_value\", arrayOfcase[0].id);\ntests[\"First Case id \"+arrayOfcase[0].id+\" \"]=arrayOfcase[0].id==environment.caseid_value;\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "47f8d868-3762-db9c-75e0-bf7fa1c9e6d1"
		},
		{
			"id": "341700e0-9c79-abd2-eec4-43b47f37d8f9",
			"name": "Cases, Ensure createOn ASC sort",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"method": "GET",
			"pathVariables": {},
			"url": "{{Case_URI}}/case?offset=0&limit=25&sort=createdOn",
			"preRequestScript": null,
			"tests": "var jsonData=JSON.parse(responseBody);\nvar array=(jsonData.data);\n\nvar sorted  =  true;\n for  (var item=1;item<=array.length -1;item++) \n {\n       if(array[item-1].createdOn > array[item].createdOn)\n   {\n     sorted = false;\n     tests[\"Test1 : Test failed. Data not sorted at element number \" + item + \" data.\"] = sorted;\n   }\n}\nif (sorted)\n{\n    tests[\"Tes1: Data is sorted in Ascending order by createdOn date\"] = sorted;}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "369adbb1-2158-da8e-9344-82f8e6fbe567"
		},
		{
			"id": "4150ea0f-9d42-48a1-b4ec-af16a1ba3499",
			"name": "Invalid Content type",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "",
			"headers": "Accept: application/json\n",
			"method": "PUT",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/{{CaseId4}}",
			"preRequestScript": null,
			"tests": "tests[\"Test 1: Invalid Content Type, response code = 415\"] = responseCode.code == 415;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"rawModeData": "{\r\n  \"subject\": \"test1\",\r\n  \"status\": \"Created\",\r\n  \"provider\": \"string\",\r\n  \"deskCaseId\": [\r\n    \"string\"\r\n  ],\r\n  \"client\": {\r\n    \"id\": \"strrrring\",\r\n    \"name\": \"striffsfsng\"\r\n  },\r\n  \"properties\": [\r\n    {\r\n      \"id\": \"testid\",\r\n      \"name\": \"testname\"\r\n    }\r\n  ]\r\n}",
			"folder": "369adbb1-2158-da8e-9344-82f8e6fbe567"
		},
		{
			"id": "546499b5-91db-d78a-bd5d-2f5ed17059c5",
			"name": "Create a case",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "",
			"headers": "Content-Type: application/json\n",
			"method": "PUT",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/{{caseId}}",
			"preRequestScript": null,
			"tests": "// Status code check\ntests[\"Test 1: Create a case, response code = 201\"] = responseCode.code === 201;\n\n\n// Create Test to confim no body\ntests[\"Test 2: Test that the response body is empty\"] = responseBody ===\"\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"rawModeData": "{\n  \"subject\": \"testSubject\",\n  \"status\": \"testStatus\",\n  \"provider\": \"testProvider\",\n  \"deskCaseId\": [\n    \"testDeskId\"\n  ],\n  \"client\": {\n    \"id\": \"testClientId\",\n    \"name\": \"testClientName\"\n  },\n  \"properties\": [\n    {\n      \"id\": \"testPropertyId\",\n      \"name\": \"testPropertyName\"\n    }\n  ]\n}",
			"folder": "369adbb1-2158-da8e-9344-82f8e6fbe567"
		},
		{
			"id": "57b69f6d-9b82-668a-cfe3-659fac0a3044",
			"name": "Create/update_Encrypteddata ",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"method": "PUT",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/{{CaseId5}}/credential/{{credentialId}}?includeCreated=true",
			"preRequestScript": null,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"rawModeData": "{\r\n  \"domainUrl\": \"abc\",\r\n  \"account\": \"Created\",\r\n  \"username\": \"Testtest\",\r\n  \"password\": \"Testtttt\"\r\n}",
			"folder": "47f8d868-3762-db9c-75e0-bf7fa1c9e6d1"
		},
		{
			"id": "6168ee85-410f-0066-cd40-645df57377fe",
			"headers": "",
			"url": "{{Case_URI}}/case/{{CaseId5}}?includeCreated=true",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Test 1: Unsupported Accept Header, response code  \" +responseCode.code] = responseCode.code === 406;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465557914795,
			"name": "Create/modify case, no contnet type",
			"description": "HTTP Status Code 400 Bad Request\n- No Content Type specified\n- Body is correct",
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"rawModeData": "{\r\n  \"subject\": \"string\",\r\n  \"status\": \"string\",\r\n  \"provider\": \"string\",\r\n  \"deskCaseId\": [\r\n    \"string\"\r\n  ],\r\n  \"client\": {\r\n    \"id\": \"string\",\r\n    \"name\": \"string\"\r\n  },\r\n  \"properties\": [\r\n    {\r\n      \"id\": \"string\",\r\n      \"name\": \"string\"\r\n    }\r\n  ]\r\n}",
			"folder": "369adbb1-2158-da8e-9344-82f8e6fbe567"
		},
		{
			"id": "6d68d38e-7da4-edea-183e-e7534d0024ab",
			"name": "Get Credential for invalid Case",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "For Invalid Case Id the Response code should be 404",
			"headers": "Accept: application/json\nContent-Type: \n",
			"method": "GET",
			"pathVariables": {},
			"url": "{{Case_URI}}case/{{caseIdInvalid}}/credential",
			"preRequestScript": null,
			"tests": "tests[\"Test 1: Crendetial for Invalid Case Id, response code = 404 \"] = responseCode.code === 404;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "47f8d868-3762-db9c-75e0-bf7fa1c9e6d1"
		},
		{
			"id": "7762a2e4-4aaa-ed81-5951-f8988e3ccf23",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "{{Case_URI}}/case/attachment?caseId={{caseId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Test 1: Invalid enpoint and query, response code = 404\"] = responseCode.code === 404;\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464774457152,
			"name": "Invalid URL for an attachment endpotin",
			"description": "This test to make sure another URL and query structuion is not allowed for the attachment endpoint.",
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "b8d9677e-5e41-44e9-949d-344c6c6bccd8"
		},
		{
			"id": "7f865c82-c19b-4588-d345-c708f0ad5feb",
			"name": "Create case, include response",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "Pass the content that was just created",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"method": "PUT",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/{{caseId}}?includeCreated=true",
			"preRequestScript": null,
			"tests": "// TODO: Capture proper content type header\npostman.setGlobalVariable(\"capture_contentType\", postman.getResponseHeader(\"Content-Type\"));\ntests[\"Test 1: Content-Type is JSON\"] = globals[\"capture_contentType\"]==\"application/json; charset=utf-8\";\n// TODO: Add schema tests\n//TODO: Add test to ensure response is same values as request.\n/*\n//verify the responses are returned//\nvar jsonData = JSON.parse(responseBody);\n//verify that response is  returned for Client Name//\ntests[\"Test 2: Verify Client Name\"] = jsonData.client.name == \"testClientName\";\n//verify that response is  returned for Subject //\ntests[\"Test 3: Verify subject\"] = jsonData.subject == \"testSubject\";\n//verify that response is  returned for provider//\ntests[\"Test 4: Verify provider\"] = jsonData.provider == \"testProvider\";\n\n*/",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"rawModeData": "{\n  \"subject\": \"testSubject\",\n  \"status\": \"testStatus\",\n  \"provider\": \"testProvider\",\n  \"deskCaseId\": [\n    \"testDeskId\"\n  ],\n  \"client\": {\n    \"id\": \"testClientId\",\n    \"name\": \"testClientName\"\n  },\n  \"properties\": [\n    {\n      \"id\": \"testPropertyId\",\n      \"name\": \"testPropertyName\"\n    }\n  ]\n}",
			"folder": "369adbb1-2158-da8e-9344-82f8e6fbe567"
		},
		{
			"id": "81cdaf20-caf0-e048-ab28-cba86d1bfd56",
			"name": "Create/modify case,  empty body",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "",
			"descriptionFormat": null,
			"description": "HTTP Status Code 400 Bad Request\n- Content Type specified\n- Body is empty",
			"headers": "Accept: application/json\n",
			"method": "PUT",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/{{caseId}}",
			"preRequestScript": null,
			"tests": "tests[\"Test 1: Body is missing, repsonse code = 400\"] = responseCode.code === 400;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "369adbb1-2158-da8e-9344-82f8e6fbe567"
		},
		{
			"id": "9c4a1a7c-61c6-c3d0-65bc-37cdf234f975",
			"headers": "Content-Type: application/json\nAccept: application/json\n",
			"url": "{{Case_URI}}/case/{{caseid_value}}/credential",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"tests": "/*push the below property details to  case id \n\"domainUrl\":\"{{domainUrl}}\",\n  \"account\": \"{{account}}\",\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}*/\n\ntests[\"Test 1: Get list of credentials, response code = 200\"] = responseCode.code === 200;\n\n// Check the Schema //\n//validation of schema\n\nvar schema =  {\n\n \t\t\"data\": {\n \t\t\t\"type\": \"array\",\n \t\t\t\"items\": {\n \t\t\t\t\"type\": \"object\",\n \t\t\t\t\"properties\": {\n \t\t\t\t\t\"id\": {\n \t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t},\n \t\t\t\t\t\"description\": {\n \t\t\t\t\t\t\"type\":[\"null\",\"object\"]\n \t\t\t\t\t},\n\n \t\t\t\t\t\"username\": {\n \t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t},\n \t\t\t\t\t\"password\": {\n \t\t\t\t\t\t\"type\": \"string\"\n\n \t\t\t\t\t},\n \t\t\t\t\t\t\"domainUrl\": {\n \t\t\t\t\t\t\"type\": [\"null\",\"object\"]\n\n \t\t\t\t\t},\n \t\t\t\t\t\"account\": {\n \t\t\t      \"type\":[\"null\",\"object\"]\n \t\t\t\t\t\t},\n \t\t\t\t\n \t\t\t\t\t\"createdOn\": {\n \t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t},\n \t\t\t\t\t\"idp\": {\n \t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t},\n \t\t\t\t\t\"caseId\": {\n \t\t\t\t\t\t\"type\": \"string\"\n \t\t\t\t\t},\n \t\t\t}\n \t\t}\n \t\t \n \t}\n \t};\n\nvar data = JSON.parse(responseBody);\nconsole.log(tv4.error);\ntests[\"Valid Data \" ] = tv4.validate(data, schema);\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1466425166415,
			"name": "Credentials for a valid case",
			"description": "Get a list of Credentials for a know valid case id.",
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"rawModeData": "{\r\n  \"domainUrl\":\"{{domianUrl}}\",\r\n  \"account\": \"{{account}}\",\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
			"folder": "47f8d868-3762-db9c-75e0-bf7fa1c9e6d1"
		},
		{
			"id": "aeaeb808-9f40-7d1b-4ecf-c39bfe31d698",
			"headers": "Content-Type: application/json\nAccept: application/json\n",
			"url": "{{Case_URI}}/case/{{CaseId5}}/credential/{{credentialId}}/password",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1466078396223,
			"name": "Password Encrypt Endpoint",
			"description": "",
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"responses": [],
			"rawModeData": "",
			"folder": "47f8d868-3762-db9c-75e0-bf7fa1c9e6d1"
		},
		{
			"id": "cfbe225e-1802-3ee2-5c6c-b26e61e1bab3",
			"name": "Cases, Validate offset",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "Based on a previous request, ensure the offset works as expected",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"method": "GET",
			"pathVariables": {},
			"url": "{{Case_URI}}/case?offset={{offset2}}",
			"preRequestScript": null,
			"tests": "//TC4:Validation for offset value (Second Request)\nvar jsonData=JSON.parse(responseBody);\nvar arrayOfcase=jsonData.data;\ntests[\"First Element id \"+arrayOfcase[0].id+\" with offset = 3 is same as fourth element with offset=0 :\"+environment.case_offset_3_value]=arrayOfcase[0].id==environment.case_offset_3_value;\n\n       \n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "369adbb1-2158-da8e-9344-82f8e6fbe567"
		},
		{
			"id": "d5ba8b4a-4f98-4757-484c-311d36514c9d",
			"name": "Create/Modify a credential",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "Create/Modify a credential: Response code 201",
			"headers": "Content-Type: application/json\nAccept: application/json\n",
			"method": "PUT",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/{{caseid_value}}/credential/{{credentialId}}",
			"preRequestScript": null,
			"tests": "/*push the below property details to  case id \n\"domainUrl\":\"{{domainUrl}}\",\n  \"account\": \"{{account}}\",\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}*/\n\ntests[\"Test 1: Successful creation of credential, response code = 201\"] = responseCode.code === 201;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"rawModeData": "{\r\n  \"domainUrl\":\"{{domianUrl}}\",\r\n  \"account\": \"{{account}}\",\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
			"folder": "47f8d868-3762-db9c-75e0-bf7fa1c9e6d1"
		},
		{
			"id": "df4463d5-ee31-fd60-5aae-4138cfb12e9a",
			"name": "List of attachments",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"method": "GET",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/{{caseid_value}}/attachment",
			"preRequestScript": null,
			"tests": "//post request\nvar jsonData=JSON.parse(responseBody);\n\nfor  (item=0;item<=jsonData.length-1;item++) \n{\n     if(jsonData[item].id==environment.id)\n  {\n     tests[\"name matched\"]=jsonData[item].name==environment.name;\n     tests[\"idp matched\"]=jsonData[item].idp==environment.idp;\n     tests[\"size matched\"]=jsonData[item].size==environment.size;\n     tests[\"caseid value matched\"]=jsonData[item].caseId==environment.caseid_value;\n     \n  }\n  \n}\n\n//TODO : Add schema Test for the Attachment list\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "b8d9677e-5e41-44e9-949d-344c6c6bccd8"
		},
		{
			"id": "e61ef13b-c142-91bb-81a0-90befa958499",
			"name": "Cases, Ensure createOn DESC default sort",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"method": "GET",
			"pathVariables": {},
			"url": "{{Case_URI}}/case?offset=0&limit=25",
			"preRequestScript": null,
			"tests": "var jsonData=JSON.parse(responseBody);\nvar array=(jsonData.data);\n\nvar sorted  =  true;\n for  (var item=1;item<=array.length -1;item++) \n {\n       if(array[item-1].createdOn < array[item].createdOn)\n   {\n     sorted = false;\n     tests[\"Test 1: Test failed. Data not sorted at element number \" + item + \" data.\"] = sorted;\n   }\n}\nif (sorted)\n{\n    tests[\"Test 1: Data is sorted in Descending order by createdOn date\"] = sorted;}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "369adbb1-2158-da8e-9344-82f8e6fbe567"
		},
		{
			"id": "ea6a30d4-a6f5-207d-d304-4473bdfff5b3",
			"name": "Credential Method Not Allowed",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "Response code for invalid method should be 400",
			"headers": "Content-Type: application/json\nAccept: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/{{caseId}}/credential",
			"preRequestScript": null,
			"tests": "/*where domainurl is not a string\n\n{\n  \"domainUrl\": testone,\n  \"account\": \"testtwo\",\n  \"username\": \"testthree\",\n  \"password\": \"testfour\"\n}*/\n\ntests[\"Test1: For Invalid method, response code = 405\"] = responseCode.code === 405;\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"rawModeData": "{\r\n  \"domainUrl\": testone,\r\n  \"account\": \"testtwo\",\r\n  \"username\": \"testthree\",\r\n  \"password\": \"testfour\"\r\n}",
			"folder": "47f8d868-3762-db9c-75e0-bf7fa1c9e6d1"
		},
		{
			"id": "ff351692-e43f-65a5-167f-0c17f7b23563",
			"name": "Get_Encrypteddata ",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "",
			"headers": "Accept: application/json\n",
			"method": "GET",
			"pathVariables": {},
			"url": "{{Case_URI}}/case/{{CaseId5}}/credential",
			"preRequestScript": null,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "a5884482-efd5-a33c-6e83-ed884a4700d2",
			"folder": "47f8d868-3762-db9c-75e0-bf7fa1c9e6d1"
		}
	]
}